'''
Each new term in the Fibonacci sequence is generated by adding the 
previous two terms. By starting with 1 and 2, the first 10 terms will be: 
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, â€¢ 
By considering the terms in the Fibonacci sequence whose values do not 
exceed N, find the sum of the even-valued terms. 
Input Format 
First line contains T that denotes the number of test cases. This is followed 
by T lines, each containing an integer, N 
Output Format 
Print the required answer for each test case. 

For n = 10, we have [2,8], sum is 10
For n = 100, we have [2,8,34], sum is 44

Notes:
The Fib sequence goes even, odd, odd, even, odd, odd, even, odd, odd,...
Uses the 'Golden Ratio' to calculate any Fib number.

'''
import math

fib = 0
i = 3
total = 0
PHI = float((1 + 5 ** 0.5) / 2)

try:
    t = int(input().strip())
    if t >= 1 and t <= 10**5:
        for _ in range(t):
            n = int(input().strip())

            if n >= 10 and n <= 4*(10**16):
                while fib < n:
                    fib = round(
                        int(((PHI**i)-((1-PHI)**i))/math.sqrt(5)))
                    if fib >= n:
                        break
                    else:
                        total += fib
                        i += 3
                print(total)
except Exception:
    pass

'''

def fib(n):
    a = 1
    b = 2
    total = 0
    while a < n:
        if a % 2 == 0:
            total += a
        c = a + b
        a = b
        b = c
    return total
try:
    t = int(input().strip())
    if t >= 1 and t <= 10**5:
        i = 1
        while i <= t:
            n= int(input().strip())
            if n >= 10 and n <= 4*10**16:
                print(fib(n))
            i += 1
except Exception:
    pass


'''
